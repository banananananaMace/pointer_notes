2, 顺序表实现(code见SeqLis
	2.1 顺序表是用一段物理地址连续的存储单元依次存储数据元素的线性结构, 一般采用数组存储, 在数组上完成数据的增删改查;
	    顺序表一般分为 静态(使用定长数组存储) 动态(使用动态开辟的数组存储);
	    /*
	     * 静态顺序表
	     * typedef struct seqlist {
	     *     element arr[MAX_SIZE];
	     *     int size;
	     * } SL;
	     *
	     * 动态顺序表
	     * typedef struct seqlist {
	     *     element *arr;
	     *     int size;
	     *     int capacity; //有效数据的个数
	     * }
	     */

	2.2 数据必须从头开始依次存储;

3, 链表
	3.1, 空间不一定连续,可以按需分配空间;
	---------------
	|数据域|指针域|
	---------------

	3.2, 链表的分类:
		1, 不带头节点的链表: 需要传入二级指针, 需要改变传过来的指针;
		2, 带头节点的链表: 不需要传入二级指针, 不需要改变传入的指针;

4, 栈
	只允许在一段进行插入与删除的操作;插入和删除数据的端称为栈顶,另一端为栈底;
